/**
 *
 * 96. 不同的二叉搜索树
 * 给你一个整数 n ，求恰由 n 个节点组成且节点值从 1 到 n 互不相同的 二叉搜索树 有多少种？返回满足题意的二叉搜索树的种数。
 *
 *
 *
 * 思路：
 * 关键是找规律，找二叉搜索树的形态。每增加一个数，形态的变化。
 *
 * 每次增加一个数n，这个数是最大，那么这个树的形态有，只能放在n的左上角， n的左下角。 剩余的n-1个数分配在左上角或左下角。 左上角n-1个，右下角0个。 左上角n-2个，左下角1个。 依此类推。
 *
 * 我这个规律是根据最后增加的数作为研究对象。 官方是以为根的数作为研究对象。
 *
 *
 *
 *
 *
 *
 * @author rzet
 * @date 2021/11/25 18:50
 */
public class T96 {
    public int numTrees(int n) {
        if (n == 1)
            return 1;
        int dp[] = new int[n + 1];
        dp[0] = 1; //哑的
        dp[1] = 1;

        for (int i = 2; i <= n; i++){
            for (int j = i -1; j >=0; j--){
                dp[i] += dp[j] * dp[i-1 - j]; //左上角 左下角 组合，乘积。
            }
            //System.out.println(dp[i]);
        }

        return dp[dp.length-1];
    }
}
